#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define MAC 0
#define WINDOWS 1
#define GAME 2
#define CODE 3
#define NUMBER 4
#define FUNCTION 5

// Behavior Overrides
&lt {
    tapping-term-ms = <150>;
    flavor = "hold-preferred";
};

/ {
    macros {
        spotlight: spotlight {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LGUI>, <&macro_tap &kp SPACE>, <&macro_release &kp LGUI>; 
        };

        // Emoji
        mac_emoji: mac_emoji {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LGUI>, <&macro_press &kp LCTRL>, <&macro_tap &kp SPACE>, <&macro_release &kp LCTRL>, <&macro_release &kp LGUI>; 
        };

        windows_emoji: windows_emoji {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LGUI>, <&macro_tap &kp DOT>, <&macro_release &kp LGUI>; 
        };
    };



    behaviors {
        bm: bottom_row_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        cm: code_row_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            retro-tap;
        };

        sm: space_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        td_multi_mac: tap_dance_multi_mac {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sm ESC LALT>, <&spotlight>, <&kp LCTRL>, <&mac_emoji>;
        };

        td_multi_windows: tap_dance_multi_windows {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sm ESC LALT>, <&kp LGUI>, <&windows_emoji>;
        };
    }; 

    combos {
        compatible = "zmk,combos";

        f1 {
            bindings = <&kp F1>;
            key-positions = <0 10>;
        };

        f2 {
            bindings = <&kp F2>;
            key-positions = <1 11>;
        };
         
        f3 {
            bindings = <&kp F3>;
            key-positions = <2 12>;
        };

        f4 {
            bindings = <&kp F4>;
            key-positions = <3 13>;
        };

        f5 {
            bindings = <&kp F5>;
            key-positions = <4 14>;
        };

        f6 {
            bindings = <&kp F6>;
            key-positions = <5 15>;
        };

        f7 {
            bindings = <&kp F7>;
            key-positions = <6 16>;
        };

        f8 {
            bindings = <&kp F8>;
            key-positions = <7 17>;
        };

        f9 {
            bindings = <&kp F9>;
            key-positions = <8 18>;
        };

        f10 {
            bindings = <&kp F10>;
            key-positions = <9 19>;
        };

        f11 {
            bindings = <&kp F11>;
            key-positions = <10 20>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };

        moodoru {
            bindings = <&kp LA(LEFT)>;
            key-positions = <11 21>;
        };

        susumu {
            bindings = <&kp LA(RIGHT)>;
            key-positions = <12 22>;
        };

        stop {
            bindings = <&kp C_PLAY_PAUSE>;
            key-positions = <13 23>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <11 12>;
        };
    };
    
    keymap {
        compatible = "zmk,keymap";

        mac_default_layer {
            display-name = "Mac";
            bindings = <
&lt 4 Q      &kp W        &kp E           &kp R           &kp T    &kp Y    &kp U  &kp I               &kp O              &lt 4 P          
&lt 1 A      &lt 2 S      &kp D           &kp F           &kp G    &kp H    &kp J  &kp K               &lt 2 L            &lt 1 SEMICOLON 
&mt LCTRL Z  &mt LSHFT X  &mt LEFT_ALT C  &mt LEFT_GUI V  &lt 3 B  &kp N    &kp M  &mt LEFT_ALT COMMA  &mt RSHIFT PERIOD  &mt RCTRL SLASH  
            >;
        };

        windows_default_layer {
            display-name = "Windows";
            bindings = <
&kp LS(PLUS)  &kp N7  &kp N8  &kp N9     &kp N0     &kp LS(AMPS)    &kp LS(STAR)          &kp LS(TILDE)      &kp LS(DQT)       &kp LS(PIPE)  
&kp LS(PLUS)  &kp N4  &kp N5  &kp N6     &kp MINUS  &kp LS(DLLR)    &kp LS(PRCNT)         &kp LS(CARET)      &kp BSLH          &kp SPACE     
&kp EQUAL     &kp N1  &kp N2  &kp N3     &kp DOT    &kp LS(EXCL)    &mt LS(RGUI) AT_SIGN  &mt LS(RALT) HASH  &mt RSHIFT GRAVE  &mt RCTRL SQT  
            >;
        };

        gaming_layer {
            display-name = "Gaming";
            bindings = <
&trans  &trans  &trans    &trans     &trans      &trans    &trans  &trans  &trans  &kp PRINTSCREEN
&trans  &trans  &kp BSPC  &kp ENTER  &kp DELETE  &trans    &trans  &trans  &trans  &studio_unlock            
&trans  &trans  &trans    &trans     &kp SPACE   &trans    &trans  &trans  &trans  &trans         
            >;
        };

        code_layer {
            display-name = "Code";
            bindings = <
&trans    &kp UP    &trans     &trans  &trans &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  
&kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans  &trans      &trans   &trans  &trans  &bt BT_CLR
&trans    &trans    &trans     &trans  &trans  &bootloader    &trans  &trans  &trans   &studio_unlock     
            >;
        };

        number_layer {
            display-name = "Number";
            bindings = <
&kp EXCL   &kp AT  &kp HASH  &kp DLLR  &kp PRCNT       &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4 
&kp N1     &kp N2  &kp N3    &kp N4    &kp N5          &kp N6     &kp N7    &kp N8        &kp N9    &kp N0
&kp LSHFT  &none   &none     &none     &mo FUNCTION    &none      &none     &kp COMMA     &kp DOT   &kp RSHFT
            >;
        };

        function_layer {
            display-name = "Function";
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none   &none   &to GAME  &to MAC  &to WINDOWS
&kp F1        &kp F2          &kp F3        &kp F4        &kp F5          &kp 6   &kp F7  &kp F8    &kp F9   &kp F10
&kp F11       &studio_unlock  &bt BT_CLR    &bootloader   &none           &none   &none   &none     &none    &kp F12
            >;
        };
    };
};
